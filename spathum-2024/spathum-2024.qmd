---
title: 'Causes of ethnic segregation in a nineteenth century city'
subtitle: 'The case of Vyborg'
author: 'Antti Härkönen'
institute: UEF
date: 2024-09-26
echo: false
warning: false
bibliography: references.bib
execute:
    enabled: true
format: 
    revealjs:
        theme: simple
        incremental: true
        navigation-mode: vertical
---

# Introduction

## Vyborg, a Karelian city

:::{.content-visible unless-format="pdf"}
```{python}
from ipyleaflet import Map, Marker, basemaps, basemap_to_tiles
m = Map(
  basemap=basemap_to_tiles(
    basemaps.OpenTopoMap
  ),
  center=(60.715591, 28.729147),
  zoom=5
)
m.add_layer(Marker(location=(60.715591, 28.729147)))
m
```
:::

:::{.content-visible when-format="pdf"}
![](vyborg-loc.png){fig-alt="Location of Vyborg on map"}
:::

## Vyborg, a Karelian city

- castle founded in the late 13th century
- town privileges 1403

# Sources

## Estimating the size of Russian population

- over 90% of Orthodox in Vyborg Russian

## Poll tax records {.scrollable}

| column | description |
|---:|:---|
| plot_number | Plot number |
| taxpayer_men | Men paying poll tax |
| taxpayer_women | Women paying poll tax |
| no_tax_men | Men exempt from poll tax |
| no_tax_women | Women exempt from poll tax |
| in_russia_men | Men legally residing in Russia proper |
| in_russia_women | Women legally residing in Russia proper |
| total_men | Total men |
| total_women | Total women |
| independent | Civil servants, entrepreneurs, and financially independent |
| white_collar | White collar workers |
| worker_industry | Workers in industry |
| worker_other | Other workers |
| servants | Servants |
| other | Other employment status |
| non_resident | Resident elsewhere |
| orthodox | Orthodox |
| other_christian | Non-Lutheran and non-Orthodox Christian |
| other_religion | Other religions |
| draftable | 21-year-old males eligible for draft |

: poll tax record columns in 1894 {.striped .hover}

## Estimating the size of Lutheran population

:::{.content-visible unless-format="pdf"}
$$
\begin{equation} P_{Lutheran} = \begin{split} (P_{total\_men}+P_{total\_women}) \\ − (P_{Orthodox}+P_{other\_Christian}+P_{other\_religion}) \end{split} \end{equation}
$$
:::

:::{.content-visible when-format="pdf"}
$$
P_{Lutheran} = (P_{total\_men}+P_{total\_women}) − (P_{Orthodox}+P_{other\_Christian}+P_{other\_religion})
$$
:::
## Work flow {.scrollable}

```{mermaid}
flowchart TB
    A["Data collection and digitizing"] --> B["Georeferencing and geolocating"]
    B --> C["KDE"]
    C --> D["Data linking and selection"]
    D --> E["Data normalisation"]
    E --> F["Training regression model"]
    F --> G["Visualisation"]
    G --> H{"Assessing model"}
    H --> I["Analysis of results"]
    H --> F
```

## Sources {.scrollable}

Signum | Original year | Digitization process
---|---|---
Town plan of Vyborg. Vyborg military engineer detachment’s archive of plans for fortifications and buildings, 7, 11. | 1878 | Georeferenced using ground control points, vectorized manually into shapefile
Vyborg province poll tax registers | 1880 | Digitized manually into CSV
Financial office of the city of Vyborg, Municipal tax levies and payment registers | 1880 | Digitized manually into CSV

: Sources from the National archives of Finland {.striped .hover}

## Population growth

| District | 1822 | 1880 |
|----------|------|------|
| Centre   | 1192 | 2506 |
| St. Anna | 244 | 117 |
| Vyborg suburb | 642 | 756 |
| St Petersburg suburb | 1512 | 2685 |

: Population growth in key areas {.striped .hover}

# Population surface model

## Population density modelling

Based on @martin2000.
$$ P_i=\sum^N_{j=1} P_j w_{ij} $$

$$ w_{ij} = \left( \frac{k^2 - d^2_{ij}}{k^2 + d^2_{ij}} \right)^\alpha $$

when 

$$ d_{ij} < k $$

## Biweight kernel

```{python}
#| label: kernel profile
#| fig-cap: Kernel function
#| fig-alt: Side profile of a biweight kernel function

import numpy as np
import matplotlib.pyplot as plt

α = [0.5, 1, 1.5, 2, 5, 10]
k=1

x = np.arange(0.001, 1, 0.001)
y = np.power((k**2 - x**2) / (k**2 + x**2), α)
y[x>=k] = 0

fig, ax = plt.subplots()
ax.plot(x, y)
plt.show()
print(len(x))
```

## References

::: {#refs}
:::